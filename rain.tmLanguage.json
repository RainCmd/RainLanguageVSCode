{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "rain-language",
  "scopeName": "source.rain-language",
  "patterns": [
    {
      "match": "^\\s*(//)\\s*(region|endregion)\\b\\s*(.*)",
      "captures": {
        "1": {
          "name": "comment.line.number-sign"
        },
        "2": {
          "name": "comment.line.number-sign"
        },
        "3": {
          "name": "markup.italic"
        }
      }
    },
    {
      "match": "//.*",
      "name": "comment.line"
    },
    {
      "begin": "\"",
      "end": "\"",
      "name": "string",
      "patterns": [
        {
          "match": "(\\\\\"|\\\\'|\\\\b|\\\\f|\\\\n|\\\\r|\\\\t|\\\\v|\\\\0|\\\\x..|\\\\u....)",
          "name": "constant.character.escape"
        }
      ]
    },
    {
      "begin": "'",
      "end": "'",
      "name": "string.quoted",
      "patterns": [
        {
          "match": "(\\\\\"|\\\\'|\\\\b|\\\\f|\\\\n|\\\\r|\\\\t|\\\\v|\\\\0|\\\\x..|\\\\u....)",
          "name": "constant.character.escape"
        }
      ]
    },
    {
      "match": "\\b[0-9_]*?\\.[0-9_]+\\b",
      "name": "constant.numeric"
    },
    {
      "match": "\\b(0b|0b)[01_]+\\b",
      "name": "constant.numeric"
    },
    {
      "match": "\\b(0x|0X)[0-9a-fA-F_]+\\b",
      "name": "constant.numeric"
    },
    {
      "match": "\\b[0-9_]+\\b",
      "name": "constant.numeric"
    },
    {
      "match": "\\b(if|elseif|else|while|for|break|continue|return|start|new|wait|exit|try|catch|finally)\\b",
      "name": "keyword.control"
    },
    {
      "match": "\\b(base|this|global)\\b",
      "name": "variable.language"
    },
    {
      "match": "\\b(true|false|null)\\b",
      "name": "constant.language.boolean"
    },
    {
      "match": "\\b(var|bool|byte|char|integer|real|real2|real3|real4|type|string|handle|entity|delegate|task|array)\\b",
      "name": "storage.type"
    },
    {
      "match": "\\b(namespace|import|native|public|internal|space|protected|private|enum|struct|class|interface|const)\\b",
      "name": "keyword"
    },
    {
      "match": "\\=|\\&|\\&\\&|\\&\\=|\\||\\|\\||\\|\\=|\\^|\\^\\=|<|<\\=|<<|<<\\=|>|>\\=|>>|>>\\=|\\+|\\+\\+|\\+\\=|-|--|-\\=|->|\\*|\\*\\=|/|/\\=|%|%\\=|!|!\\=|`|\\?|:|\\.|\\bis\\b|\\bas\\b|\\band\\b|\\bor\\b",
      "name": "keyword.operator"
    },
    {
      "match": "\\b[A-Z_][A-Z0-9_]*\\b",
      "name": "constant.other"
    },
    {
      "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?=\\()",
      "name": "entity.name.function"
    },
    {
      "match": "\\b[a-z][a-zA-Z0-9_]*\\b",
      "name": "variable"
    },
    {
      "match": "\\b[A-Z][a-zA-Z0-9_]*\\b",
      "name": "entity.name.type"
    }
  ]
}